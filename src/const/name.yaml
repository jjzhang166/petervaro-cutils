- Options
- name: Name Mangling
  info: |
        However `cutils` uses very short and expressive function names which
        are not confronting with any of the standard library's entities,
        sometimes one wants to use some of these function, macro or type
        names in one's own project for other purposes. To solve this problem
        `cutils` provides a macro variable, a flag, to turn on or off the
        prefixes of the variable names. By default it is turned off.
  example:
    - - >
        Each public function or function-like macro, or type name will have the
        same `cutils_` prefix, as follows
      - |
        VAR_func();  ===>  cutils_VAR_func();

    - - >
        One can compile all files or just some of it, defining the variable
        through the `-D` flag of the compiler, like this
      - \\OFFcc -std=c11 -Wall -DCUTILS_NAMESPACE -c -o filename.o

    - - Or one can define this variable before the inclusion of a header file
      - |
        #define CUTILS_NAMESPACE
        #include <cutils/VAR_head.h>
        #undef CUTILS_NAMESPACE