## INFO ########################################################################
##                                                                            ##
##                                   cutils                                   ##
##                                   ======                                   ##
##                                                                            ##
##                     Modern and Lightweight C Utilities                     ##
##                       Version: 0.8.90.684 (20140821)                       ##
##                                                                            ##
##                                 File: TODO                                 ##
##                                                                            ##
##           Designed and written by Peter Varo. Copyright (c) 2014           ##
##             License agreement is provided in the LICENSE file              ##
##                 For more info visit: http://www.cutils.org                 ##
##                                                                            ##
######################################################################## INFO ##

#---------------------------- 11 POSTS IN 7 FILES -----------------------------#
FIXME:
  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 1
  - file: doc/src/05_ccom.yaml
    line: 90
    note: |
          We need to use the String
          "object" of cutils here
          instead of this simple struct

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 2
  - file: internal/generator.py
    line: 131
    note: |
          better guard ending and meaningful comment

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 3
  - file: internal/generator.py
    line: 150
    note: |
          strip whitespaces

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 4
  - file: ccom.py
    line: 169
    note: |
          for some reason, if a comment-type ever existed in the TODO
          file, but after a while its posts are all gone, the keyword
          still remains there, according to the current TODO file,
          which still have the "QUESTIONS" keyword, and comment

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 5
  - file: clic.py
    line: 32
    note: |
          if modules cannot be found?

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 6
  - file: clic.py
    line: 164
    note: |
          what if none of the files changed only INFO has been updated?

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 7
  - file: clic.py
    line: 178
    note: |
          make it more generic than ./ -- what if ../../?

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 8
  - file: cdoc.py
    line: 132
    note: |
          replace newline only if newline character is
          the first token in that line or it is after
          a similar token (prevent: \\\n)

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 9
  - file: cdoc.py
    line: 249
    note: |
          if external file changed -> change the whole file
          check for all special features and find out how
          to store them properly in the cache files

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 10
  - file: internal/dynamic_array.py
    line: 102
    note: |
          try to make both find and findall type-safe
          by replacing the const void* to type specific pointer
          the main problem is, cannot pass
          bool(*)(const type*,...) --> bool(*)(const void*,...)

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 11
  - file: internal/singly_linked_list.py
    line: 105
    note: |
          try to make both find and findall type-safe
          by replacing the const void* to type specific pointer
          the main problem is, cannot pass
          bool(*)(const type*,...) --> bool(*)(const void*,...)



#---------------------------- 61 POSTS IN 23 FILES ----------------------------#
TODO:
  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 1
  - file: cenv.py
    line: 26
    note: |
          Add cdep, ccom, cver and clic support to makefile

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 2
  - file: cfps.h
    line: 22
    note: |
          At the moment in a single scope only the first appearence of
          these functions will work. NOTE: If you want to use both printfps
          and getfps at the same time, use the getfps function only, and pass
          a getter function which can also implement the printing functionality 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 3
  - file: doc/src/23_call.yaml
    line: 25
    note: |
          write about defining flags and CUTILS_NAMESPACE before call.h

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 4
  - file: cbug.h
    line: 20
    note: |
          sdebug() -> expands to string literal or
          debugexc(func, msg, len) -> calls raise() or ccraise() 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 5
  - file: internal/pre_commit.py
    line: 21
    note: |
          generate documentation to some better place, maybe /tmp ?
          after committed, change the branch copy the content and
          then commit changed to the gh-pages branch and switch
          back to master branch

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 6
  - file: internal/pre_commit.py
    line: 26
    note: |
          Make error messages and reports of cver/cdoc/ccom/clic similar!

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 7
  - file: ccom.py
    line: 78
    note: |
          consider: can <space> be anything?
          Like this example:
          some line of code # tag: starts here
                            #      another line goes here
                            #      and the third here..
          the code goes on...

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 8
  - file: ccom.py
    line: 166
    note: |
          Make hidden files OS independent, probably using
          https://docs.python.org/3.4/library/tempfile.html ?

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 9
  - file: ccom.py
    line: 174
    note: |
          Add explicit-remove/browsing capabilities of the .*_cache files
          (for example: if git reverted changes --> remove hash from cache file)
          The best solution would be a complete CLI tool, to read and manage
          and use the cutils command line tools

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 10
  - file: cver.py
    line: 68
    note: |
          ask for folder or file input

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 11
  - file: clic.py
    line: 49
    note: |
          Add special exception variable; maybe simply: 'cutils' as a dir?

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 12
  - file: call.h
    line: 20
    note: |
          rename this to 'cutils.h'? 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 13
  - file: cref.h
    line: 24
    note: |
          renmae this: cref.c => cref.h 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 14
  - file: cref.h
    line: 347
    note: |
          %ju and %lf and %td and %hd and %hu
          http://www.mekong.net/tech/printf.htm

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 15
  - file: cexc.h
    line: 145
    note: |
          OPTION 1: catch returns 1 if error, else 0, CON: if func removed by macro?
          OPTION 2: use ccatch for that? (the callback does what the
                    `if (catch())` would have done) 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 16
  - file: internal/dynamic_array.c
    line: 17
    note: |
          add String to cdar
          DynamicArray_String: String
          DynamicArray_string: char * 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 17
  - file: internal/dynamic_array.c
    line: 21
    note: |
          add DynamicArray to cdar
          DynamicArray_DynamicArray: nested arrays 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 18
  - file: internal/dynamic_array.c
    line: 24
    note: |
          implement: reverses count number of sub data starts at index
          void
          darv_reversesub(cutils_cdar_DynamicArray_void_ptr *dynarr,
                          size_t index,
                          size_t count) 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 19
  - file: internal/dynamic_array.c
    line: 30
    note: |
          Implement `swapto`
          #define swapto(dar_ptr_src, dar_ptr_dst, index_src, index_dst, count) 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 20
  - file: internal/dynamic_array.c
    line: 33
    note: |
          Implement `appendto` (or `concatanate` or `add` or `extend`)
          #define appendto(dar_ptr_dst, dar_ptr_src)
              do {
                  if (!dar_ptr_src) break;
                  append(dar_ptr_dst, len(dar_ptr_src), raw(dar_ptr_src));
              } while (0) 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 21
  - file: internal/dynamic_array.c
    line: 40
    note: |
          Implement `insertto`
          #define insertto(dar_ptr_dst, index, dar_ptr_src)
              do {
                  if (!dar_ptr_src) break;
                  insert(dar_ptr_dst, index, len(dar_ptr_src), raw(dar_ptr_src));
              } while (0) 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 22
  - file: internal/dynamic_array.c
    line: 47
    note: |
          Implement `setto`
          #define setto(dar_ptr_dst, index, dar_ptr_dst)
              do {
                  if (!dar_ptr_dst) break;
                  set(dar_ptr_dst, index, len(dar_ptr_dst), raw(dar_ptr_dst));
              } while (0) 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 23
  - file: internal/dynamic_array.c
    line: 54
    note: |
          Implement `popto`
          #define popto(dar_ptr_dst, index, count, dar_ptr_src)
              do {
                  void *temp = malloc((size(dar_ptr_dst) / len(dar_ptr_dst)) * count);
                  if (!temp) break;
                  pop(dar_ptr_src, index, count, temp);
                  append(dar_ptr_dst, count, temp);
                  free(temp);
              } while (0) 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 24
  - file: internal/dynamic_array.c
    line: 64
    note: |
          copy() => new(&darf2, len(darf1), raw(darf1)); 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 25
  - file: internal/dynamic_array.c
    line: 66
    note: |
          slice() => creates a new DynamicArray_type from sub of array 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 26
  - file: internal/dynamic_array.c
    line: 68
    note: |
          findmax() => find the first n appereances of an item, where n<=max
          
          /* TODO: #define at(dar_ptr, index, data_ptr) get(dar_ptr, index, 1, data_ptr)
          #define pop(dar_ptr, data_ptr) pull(dar_ptr, len(dar_ptr) - 1, 1, data_ptr)
          #define append(dar_ptr, data_ptr) push(data_ptr, len(dar_ptr) - 1, 1, data_ptr) 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 27
  - file: internal/dynamic_array.c
    line: 412
    note: |
          change behaviour: return false, instead of limiting,
          just like in csll; also: correct the documentation 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 28
  - file: doc/src/16_cstr.yaml
    line: 43
    note: |
          Implement cstr: dynamic null-terminated char array (char *)
          format(string)
          format("%s %%s", "hello") -> "hello %s"
          probably this should be implemented for String (pop)
          concat(string1, string2) -- is this necessary?
          rethink all string methods!
          Update: But C already has escape sequence!
                  char str[3];
                  sprintf(str, "%%%c", 'd');
                  printf(str,  12);

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 29
  - file: doc/src/19_cmap.yaml
    line: 42
    note: |
          Implement cmap: Hash Map

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 30
  - file: cdoc.py
    line: 18
    note: |
          add 'since' to indicate which version the given feature is availbe from
          like:   since: version 3.14

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 31
  - file: cdoc.py
    line: 510
    note: |
          support formatted TODO import

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 32
  - file: cdoc.py
    line: 570
    note: |
          add `members` support in TYPE

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 33
  - file: cdoc.py
    line: 654
    note: |
          Implement a Schema validator for better user-feedback

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 34
  - file: cdoc.py
    line: 656
    note: |
          add FOOT key

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 35
  - file: cdoc.py
    line: 658
    note: |
          add TEXT key -- only with 'text' and 'code'
          something like:
          TEXT:
            - text: normal text, nothing special
            - code: |
                    #incude <multline_code.h>

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 36
  - file: cdoc.py
    line: 757
    note: |
          do we really need a separate OrderedDict for pages ???

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 37
  - file: cdoc.py
    line: 817
    note: |
          add 'external CSS path' argument

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 38
  - file: cdoc.py
    line: 819
    note: |
          add -reset flags which will remove the cache files

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 39
  - file: doc/src/00_cutils.yaml
    line: 42
    note: |
          add progressbar to front-page representing
          which modules are ready and which are WIP

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 40
  - file: doc/src/00_cutils.yaml
    line: 45
    note: |
          consider changing `clic` -> `ccom` and `ccom` -> `ctag`

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 41
  - file: doc/src/00_cutils.yaml
    line: 47
    note: |
          create a proper makefile

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 42
  - file: doc/src/00_cutils.yaml
    line: 55
    note: |
          create call - which will include all the header files available

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 43
  - file: doc/src/00_cutils.yaml
    line: 73
    note: |
          add EXEC to cdoc to add "interactive" python snippets to code

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 44
  - file: doc/src/00_cutils.yaml
    line: 81
    note: |
          write article about modern interfaces
          drawbacks[1]: macro(((cast){1, 2, 3}))
                              ^
                      extra parenthesis
          drawbacks[2]: one has to write/exzend the interface header
                        if one wants to use the same generic macro
          drawbacks[3]: -std=c11
          
          advantage: OOP => instance.method(args...)
                                            ^
                        instance passed implicitly as first argument
          
                     before: object_method(instance, args...)
                               ^              ^
                 name space is token name   instance passed explicitly
          
                     now: method(instance, args...)
                             ^
                     method decides which object's method to use

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 45
  - file: internal/dynamic_array.py
    line: 127
    note: |
          is there a way to make this inline?

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 46
  - file: internal/dynamic_array.py
    line: 129
    note: |
          change this const void* --> const {2}* ?

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 47
  - file: internal/dynamic_array.py
    line: 131
    note: |
          add all suffixes of numbers (eg.: unsigned long long 1ull)
          and update the examples of the documentation

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 48
  - file: internal/dynamic_array.py
    line: 141
    note: |
          is there a way to make this inline?

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 49
  - file: internal/dynamic_array.py
    line: 208
    note: |
          is there a way to make this inline?

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 50
  - file: capi.h
    line: 104
    note: |
          generate these two automatically 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 51
  - file: internal/singly_linked_list.py
    line: 130
    note: |
          is there a way to make this inline?

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 52
  - file: internal/singly_linked_list.py
    line: 132
    note: |
          change this const void* --> const {2}* ?

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 53
  - file: internal/singly_linked_list.py
    line: 134
    note: |
          add all suffixes of numbers (eg.: unsigned long long 1ull)
          and update the examples of the documentation

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 54
  - file: internal/singly_linked_list.py
    line: 144
    note: |
          is there a way to make this inline?

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 55
  - file: internal/singly_linked_list.py
    line: 202
    note: |
          is there a way to make this inline?

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 56
  - file: cdar.c
    line: 358
    note: |
          change behaviour: return false, instead of limiting,
          just like in csll; also: correct the documentation 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 57
  - file: csll.c
    line: 699
    note: |
          pop() has only three extra statements compared to pull()
          1) else if (!destination) ...
          2) char *dest = (char *)destination;
          3) memcpy(dest + (count - counter)*item_size, node_curr->data, item_size);
          try to "merge" these two together -- with a macro?
          also sub() has the same lines except no popping and freeing
          (and their error message "names" differes of course) 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 58
  - file: internal/singly_linked_list.c
    line: 17
    note: |
          consider to implement SinglyLinkedList.reserved_head and reserved_tail
          members as SLLNode* which will hold the deleted nodes, and whenever a
          new node has to be inserted, it will insert from reserved_head, and
          replace its data -- super fast; less allocations (less fragmented
          memory blocks); takes way more space. Also: resize() will add empty
          nodes to reserved_tail (or removed from there) and size() will return
          the total number of nodes (length + reserved_length) 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 59
  - file: internal/singly_linked_list.c
    line: 704
    note: |
          pop() has only three extra statements compared to pull()
          1) else if (!destination) ...
          2) char *dest = (char *)destination;
          3) memcpy(dest + (count - counter)*item_size, node_curr->data, item_size);
          try to "merge" these two together -- with a macro?
          also sub() has the same lines except no popping and freeing
          (and their error message "names" differes of course) 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 60
  - file: doc/src/15_cdar.yaml
    line: 17
    note: |
          update all samples --> add error checking wether
          method() was successful (new, append, etc.)
          
              bool check;
              check = method(...);
              if (!check) return EXIT_FAILURE;

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 61
  - file: doc/src/15_cdar.yaml
    line: 50
    note: |
          finish dependings



#----------------------------- 4 POSTS IN 4 FILES -----------------------------#
HACK:
  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 1
  - file: etc/cutils_modern_api.c
    line: 88
    note: |
          the re-casting of the pointers is a dirty but useful hack which is
          needed to set the assignment-expression to a function call instead of
          the function name itself. If re-casting is not added, the code will
          also work, however the compiler will generate 2 warnings.
          more info: http://stackoverflow.com/questions/24743520 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 2
  - file: internal/generator.py
    line: 155
    note: |
          make the supporter types way more generic
          create a better definition-structure!

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 3
  - file: ccom.py
    line: 38
    note: |
          to make it work as a local module, fix it ASAP

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 4
  - file: clic.py
    line: 34
    note: |
          to make it work as a local module, fix it ASAP



#----------------------------- 8 POSTS IN 5 FILES -----------------------------#
NOTE:
  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 1
  - file: internal/hash/xxhash.c
    line: 141
    note: |
          although _rotl exists for minGW (GCC under windows), performance seems poor

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 2
  - file: doc/src/05_ccom.yaml
    line: 86
    note: |
          length of the char
          array stored in string 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 3
  - file: doc/src/00_cutils.yaml
    line: 17
    note: |
          The Dark Knight 67 Crane Warns...

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 4
  - file: doc/src/00_cutils.yaml
    line: 40
    note: |
          "The best way to predict the future is to invent it." -- Alan Kay

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 5
  - file: doc/src/00_cutils.yaml
    line: 49
    note: |
          Timing: 1) CSLL
                  2) CCOL
                  3) makefile (static library) + test on Win & Linux
                  4) C11
                  5) update doc -> menu: fork me, etc.

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 6
  - file: doc/src/00_cutils.yaml
    line: 57
    note: |
          Why the error-signal of functions on success is a value that can be
          evaluated to 'true' and if 'false' if failes? Wouldn't it be easier
          to write the explicit error checking like:
          
              if (some_method) return EXIT_FAILURE;
          
          instead of:
          
              if (!some_method) return EXIT_FAILURE; ???
          
          Answer: 1) Most of the container-manipulation methods return the number
          of items they have manipulated, which evaluates to 'true' on success and
          'false' on fail. So it makes more convenient and straightforward to use
          this kind of pattern in all cutils functions and methods 2) it is more
          intuitive to return 'false' on failure than 'true'

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 7
  - file: csll.c
    line: 1168
    note: |
          maybe rename const void *item --> const void *target ?
          if it will be done, de the same in DynamicArray methods as well 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 8
  - file: internal/singly_linked_list.c
    line: 1173
    note: |
          maybe rename const void *item --> const void *target ?
          if it will be done, de the same in DynamicArray methods as well 



#----------------------------- 3 POSTS IN 3 FILES -----------------------------#
ALERT:
  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 1
  - file: internal/dynamic_array.h
    line: 17
    note: |
          DON NOT ADD GUARD TO THIS FILE !!! 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 2
  - file: internal/singly_linked_list.h
    line: 17
    note: |
          DON NOT ADD GUARD TO THIS FILE !!! 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 3
  - file: capi.h
    line: 524
    note: |
          D O N ' T   R E M O V E   T H E   N E X T   C O M M E N T !!! 



#----------------------------- 0 POSTS IN 0 FILES -----------------------------#
QUESTION:

