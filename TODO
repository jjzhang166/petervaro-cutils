## INFO ########################################################################
##                                                                            ##
##                                   cutils                                   ##
##                                   ======                                   ##
##                                                                            ##
##                     Modern and Lightweight C Utilities                     ##
##                       Version: 0.8.90.768 (20140822)                       ##
##                                                                            ##
##                                 File: TODO                                 ##
##                                                                            ##
##           Designed and written by Peter Varo. Copyright (c) 2014           ##
##             License agreement is provided in the LICENSE file              ##
##                 For more info visit: http://www.cutils.org                 ##
##                                                                            ##
######################################################################## INFO ##

#---------------------------- 20 POSTS IN 11 FILES ----------------------------#
FIXME:
  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 1
  - file: pycutils/cutils/ccom.py
    line: 160
    note: |
          for some reason, if a comment-type ever existed in the TODO
          file, but after a while its posts are all gone, the keyword
          still remains there, according to the current TODO file,
          which still have the "QUESTIONS" keyword, and comment

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 2
  - file: pycutils/cutils/clic.py
    line: 31
    note: |
          if modules cannot be found?

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 3
  - file: pycutils/cutils/clic.py
    line: 156
    note: |
          what if none of the files changed only INFO has been updated?

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 4
  - file: pycutils/cutils/clic.py
    line: 170
    note: |
          make it more generic than ./ -- what if ../../?

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 5
  - file: pycutils/cutils/cdoc.py
    line: 132
    note: |
          replace newline only if newline character is
          the first token in that line or it is after
          a similar token (prevent: \\\n)

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 6
  - file: pycutils/cutils/cdoc.py
    line: 249
    note: |
          if external file changed -> change the whole file
          check for all special features and find out how
          to store them properly in the cache files

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 7
  - file: internal/c11.py
    line: 459
    note: |
          define __paste(_0,_1,_2,_3,_4) _0##_1##_2##_3##_4
                                              ^
                                   highlighted as number

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 8
  - file: internal/c11.py
    line: 463
    note: |
          some_var, ## \   <-- line-breaker
          amother_var

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 9
  - file: internal/c11.py
    line: 603
    note: |
          format prefixes: -= 0w.pmc

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 10
  - file: build/lib/cutils/ccom.py
    line: 160
    note: |
          for some reason, if a comment-type ever existed in the TODO
          file, but after a while its posts are all gone, the keyword
          still remains there, according to the current TODO file,
          which still have the "QUESTIONS" keyword, and comment

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 11
  - file: build/lib/cutils/cdoc.py
    line: 132
    note: |
          replace newline only if newline character is
          the first token in that line or it is after
          a similar token (prevent: \\\n)

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 12
  - file: build/lib/cutils/cdoc.py
    line: 249
    note: |
          if external file changed -> change the whole file
          check for all special features and find out how
          to store them properly in the cache files

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 13
  - file: build/lib/cutils/clic.py
    line: 31
    note: |
          if modules cannot be found?

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 14
  - file: build/lib/cutils/clic.py
    line: 156
    note: |
          what if none of the files changed only INFO has been updated?

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 15
  - file: build/lib/cutils/clic.py
    line: 170
    note: |
          make it more generic than ./ -- what if ../../?

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 16
  - file: internal/dynamic_array.py
    line: 102
    note: |
          try to make both find and findall type-safe
          by replacing the const void* to type specific pointer
          the main problem is, cannot pass
          bool(*)(const type*,...) --> bool(*)(const void*,...)

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 17
  - file: internal/generator.py
    line: 131
    note: |
          better guard ending and meaningful comment

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 18
  - file: internal/generator.py
    line: 150
    note: |
          strip whitespaces

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 19
  - file: internal/singly_linked_list.py
    line: 105
    note: |
          try to make both find and findall type-safe
          by replacing the const void* to type specific pointer
          the main problem is, cannot pass
          bool(*)(const type*,...) --> bool(*)(const void*,...)

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 20
  - file: doc/src/05_ccom.yaml
    line: 91
    note: |
          We need to use the String
          "object" of cutils here
          instead of this simple struct



#---------------------------- 71 POSTS IN 26 FILES ----------------------------#
TODO:
  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 1
  - file: call.h
    line: 20
    note: |
          rename this to 'cutils.h'? 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 2
  - file: capi.h
    line: 104
    note: |
          generate these two automatically 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 3
  - file: cbug.h
    line: 20
    note: |
          sdebug() -> expands to string literal or
          debugexc(func, msg, len) -> calls raise() or ccraise() 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 4
  - file: cexc.h
    line: 145
    note: |
          OPTION 1: catch returns 1 if error, else 0, CON: if func removed by macro?
          OPTION 2: use ccatch for that? (the callback does what the
                    `if (catch())` would have done) 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 5
  - file: cfps.h
    line: 22
    note: |
          At the moment in a single scope only the first appearence of
          these functions will work. NOTE: If you want to use both printfps
          and getfps at the same time, use the getfps function only, and pass
          a getter function which can also implement the printing functionality 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 6
  - file: doc/src/16_cstr.yaml
    line: 43
    note: |
          Implement cstr: dynamic null-terminated char array (char *)
          format(string)
          format("%s %%s", "hello") -> "hello %s"
          probably this should be implemented for String (pop)
          concat(string1, string2) -- is this necessary?
          rethink all string methods!
          Update: But C already has escape sequence!
                  char str[3];
                  sprintf(str, "%%%c", 'd');
                  printf(str,  12);

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 7
  - file: doc/src/19_cmap.yaml
    line: 42
    note: |
          Implement cmap: Hash Map

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 8
  - file: doc/src/23_call.yaml
    line: 25
    note: |
          write about defining flags and CUTILS_NAMESPACE before call.h

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 9
  - file: internal/singly_linked_list.c
    line: 17
    note: |
          consider to implement SinglyLinkedList.reserved_head and reserved_tail
          members as SLLNode* which will hold the deleted nodes, and whenever a
          new node has to be inserted, it will insert from reserved_head, and
          replace its data -- super fast; less allocations (less fragmented
          memory blocks); takes way more space. Also: resize() will add empty
          nodes to reserved_tail (or removed from there) and size() will return
          the total number of nodes (length + reserved_length) 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 10
  - file: internal/singly_linked_list.c
    line: 704
    note: |
          pop() has only three extra statements compared to pull()
          1) else if (!destination) ...
          2) char *dest = (char *)destination;
          3) memcpy(dest + (count - counter)*item_size, node_curr->data, item_size);
          try to "merge" these two together -- with a macro?
          also sub() has the same lines except no popping and freeing
          (and their error message "names" differes of course) 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 11
  - file: pycutils/cutils/ccom.py
    line: 69
    note: |
          consider: can <space> be anything?
          Like this example:
          some line of code # tag: starts here
                            #      another line goes here
                            #      and the third here..
          the code goes on...

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 12
  - file: pycutils/cutils/ccom.py
    line: 157
    note: |
          Make hidden files OS independent, probably using
          https://docs.python.org/3.4/library/tempfile.html ?

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 13
  - file: pycutils/cutils/ccom.py
    line: 165
    note: |
          Add explicit-remove/browsing capabilities of the .*_cache files
          (for example: if git reverted changes --> remove hash from cache file)
          The best solution would be a complete CLI tool, to read and manage
          and use the cutils command line tools

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 14
  - file: pycutils/cutils/clic.py
    line: 41
    note: |
          Add special exception variable; maybe simply: 'cutils' as a dir?

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 15
  - file: pycutils/cutils/cdoc.py
    line: 18
    note: |
          add 'since' to indicate which version the given feature is availbe from
          like:   since: version 3.14

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 16
  - file: pycutils/cutils/cdoc.py
    line: 543
    note: |
          support formatted TODO import

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 17
  - file: pycutils/cutils/cdoc.py
    line: 603
    note: |
          add `members` support in TYPE

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 18
  - file: pycutils/cutils/cdoc.py
    line: 687
    note: |
          Implement a Schema validator for better user-feedback

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 19
  - file: pycutils/cutils/cdoc.py
    line: 689
    note: |
          add FOOT key

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 20
  - file: pycutils/cutils/cdoc.py
    line: 691
    note: |
          add TEXT key -- only with 'text' and 'code'
          something like:
          TEXT:
            - section: title
              text: normal text, nothing special
              code: |
                    #incude <multline_code.h>

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 21
  - file: pycutils/cutils/cdoc.py
    line: 699
    note: |
          add EXEC to cdoc to add "interactive" python snippets to code
          EXEC: |
          with open('VERSION') as file:
          # Insert to USER:About
          DOC[USER][0].insert(0, {'name': 'Version', 'info': file.read()})

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 22
  - file: pycutils/cutils/cdoc.py
    line: 816
    note: |
          do we really need a separate OrderedDict for pages ???

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 23
  - file: pycutils/cutils/cdoc.py
    line: 876
    note: |
          add 'external CSS path' argument

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 24
  - file: pycutils/cutils/cdoc.py
    line: 878
    note: |
          add -reset flags which will remove the cache files

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 25
  - file: internal/c11.py
    line: 37
    note: |
          At the moment tmLanguage doesn't support multiline regexes
          only through begin/patterns/end, which makes it impossible to
          catch something like this:
          
             r'/(\\\s*\n)*/((\\\s*\n)?.*)*'
          
          Which should produce a match on this:
          
             /\
             / Comment: another kind of two-lines one-liner
          
          This notation is a valid C syntax according to the standard.

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 26
  - file: internal/c11.py
    line: 297
    note: |
          enum ?

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 27
  - file: build/lib/cutils/ccom.py
    line: 69
    note: |
          consider: can <space> be anything?
          Like this example:
          some line of code # tag: starts here
                            #      another line goes here
                            #      and the third here..
          the code goes on...

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 28
  - file: build/lib/cutils/ccom.py
    line: 157
    note: |
          Make hidden files OS independent, probably using
          https://docs.python.org/3.4/library/tempfile.html ?

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 29
  - file: build/lib/cutils/ccom.py
    line: 165
    note: |
          Add explicit-remove/browsing capabilities of the .*_cache files
          (for example: if git reverted changes --> remove hash from cache file)
          The best solution would be a complete CLI tool, to read and manage
          and use the cutils command line tools

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 30
  - file: build/lib/cutils/cdoc.py
    line: 18
    note: |
          add 'since' to indicate which version the given feature is availbe from
          like:   since: version 3.14

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 31
  - file: build/lib/cutils/cdoc.py
    line: 543
    note: |
          support formatted TODO import

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 32
  - file: build/lib/cutils/cdoc.py
    line: 603
    note: |
          add `members` support in TYPE

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 33
  - file: build/lib/cutils/cdoc.py
    line: 687
    note: |
          Implement a Schema validator for better user-feedback

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 34
  - file: build/lib/cutils/cdoc.py
    line: 689
    note: |
          add FOOT key

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 35
  - file: build/lib/cutils/cdoc.py
    line: 691
    note: |
          add TEXT key -- only with 'text' and 'code'
          something like:
          TEXT:
            - section: title
              text: normal text, nothing special
              code: |
                    #incude <multline_code.h>

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 36
  - file: build/lib/cutils/cdoc.py
    line: 699
    note: |
          add EXEC to cdoc to add "interactive" python snippets to code
          EXEC: |
          with open('VERSION') as file:
          # Insert to USER:About
          DOC[USER][0].insert(0, {'name': 'Version', 'info': file.read()})

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 37
  - file: build/lib/cutils/cdoc.py
    line: 816
    note: |
          do we really need a separate OrderedDict for pages ???

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 38
  - file: build/lib/cutils/cdoc.py
    line: 876
    note: |
          add 'external CSS path' argument

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 39
  - file: build/lib/cutils/cdoc.py
    line: 878
    note: |
          add -reset flags which will remove the cache files

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 40
  - file: build/lib/cutils/clic.py
    line: 41
    note: |
          Add special exception variable; maybe simply: 'cutils' as a dir?

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 41
  - file: internal/convert.py
    line: 109
    note: |
          decide if we need `word-wrap: break-word;` or not?

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 42
  - file: cref.h
    line: 345
    note: |
          %ju and %lf and %td and %hd and %hu
          http://www.mekong.net/tech/printf.htm

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 43
  - file: internal/dynamic_array.c
    line: 17
    note: |
          add String to cdar
          DynamicArray_String: String
          DynamicArray_string: char * 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 44
  - file: internal/dynamic_array.c
    line: 21
    note: |
          add DynamicArray to cdar
          DynamicArray_DynamicArray: nested arrays 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 45
  - file: internal/dynamic_array.c
    line: 24
    note: |
          implement: reverses count number of sub data starts at index
          void
          darv_reversesub(cutils_cdar_DynamicArray_void_ptr *dynarr,
                          size_t index,
                          size_t count) 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 46
  - file: internal/dynamic_array.c
    line: 30
    note: |
          Implement `swapto`
          #define swapto(dar_ptr_src, dar_ptr_dst, index_src, index_dst, count) 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 47
  - file: internal/dynamic_array.c
    line: 33
    note: |
          Implement `appendto` (or `concatanate` or `add` or `extend`)
          #define appendto(dar_ptr_dst, dar_ptr_src)
              do {
                  if (!dar_ptr_src) break;
                  append(dar_ptr_dst, len(dar_ptr_src), raw(dar_ptr_src));
              } while (0) 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 48
  - file: internal/dynamic_array.c
    line: 40
    note: |
          Implement `insertto`
          #define insertto(dar_ptr_dst, index, dar_ptr_src)
              do {
                  if (!dar_ptr_src) break;
                  insert(dar_ptr_dst, index, len(dar_ptr_src), raw(dar_ptr_src));
              } while (0) 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 49
  - file: internal/dynamic_array.c
    line: 47
    note: |
          Implement `setto`
          #define setto(dar_ptr_dst, index, dar_ptr_dst)
              do {
                  if (!dar_ptr_dst) break;
                  set(dar_ptr_dst, index, len(dar_ptr_dst), raw(dar_ptr_dst));
              } while (0) 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 50
  - file: internal/dynamic_array.c
    line: 54
    note: |
          Implement `popto`
          #define popto(dar_ptr_dst, index, count, dar_ptr_src)
              do {
                  void *temp = malloc((size(dar_ptr_dst) / len(dar_ptr_dst)) * count);
                  if (!temp) break;
                  pop(dar_ptr_src, index, count, temp);
                  append(dar_ptr_dst, count, temp);
                  free(temp);
              } while (0) 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 51
  - file: internal/dynamic_array.c
    line: 64
    note: |
          copy() => new(&darf2, len(darf1), raw(darf1)); 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 52
  - file: internal/dynamic_array.c
    line: 66
    note: |
          slice() => creates a new DynamicArray_type from sub of array 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 53
  - file: internal/dynamic_array.c
    line: 68
    note: |
          findmax() => find the first n appereances of an item, where n<=max 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 54
  - file: internal/dynamic_array.c
    line: 70
    note: |
          #define at(dar_ptr, index, data_ptr) get(dar_ptr, index, 1, data_ptr)
          #define pop(dar_ptr, data_ptr) pull(dar_ptr, len(dar_ptr) - 1, 1, data_ptr)
          #define append(dar_ptr, data_ptr) push(data_ptr, len(dar_ptr) - 1, 1, data_ptr) 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 55
  - file: internal/dynamic_array.c
    line: 412
    note: |
          change behaviour: return false, instead of limiting,
          just like in csll; also: correct the documentation 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 56
  - file: cdar.c
    line: 358
    note: |
          change behaviour: return false, instead of limiting,
          just like in csll; also: correct the documentation 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 57
  - file: csll.c
    line: 699
    note: |
          pop() has only three extra statements compared to pull()
          1) else if (!destination) ...
          2) char *dest = (char *)destination;
          3) memcpy(dest + (count - counter)*item_size, node_curr->data, item_size);
          try to "merge" these two together -- with a macro?
          also sub() has the same lines except no popping and freeing
          (and their error message "names" differes of course) 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 58
  - file: internal/dynamic_array.py
    line: 127
    note: |
          is there a way to make this inline?

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 59
  - file: internal/dynamic_array.py
    line: 129
    note: |
          change this const void* --> const {2}* ?

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 60
  - file: internal/dynamic_array.py
    line: 131
    note: |
          add all suffixes of numbers (eg.: unsigned long long 1ull)
          and update the examples of the documentation

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 61
  - file: internal/dynamic_array.py
    line: 141
    note: |
          is there a way to make this inline?

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 62
  - file: internal/dynamic_array.py
    line: 208
    note: |
          is there a way to make this inline?

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 63
  - file: internal/singly_linked_list.py
    line: 130
    note: |
          is there a way to make this inline?

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 64
  - file: internal/singly_linked_list.py
    line: 132
    note: |
          change this const void* --> const {2}* ?

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 65
  - file: internal/singly_linked_list.py
    line: 134
    note: |
          add all suffixes of numbers (eg.: unsigned long long 1ull)
          and update the examples of the documentation

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 66
  - file: internal/singly_linked_list.py
    line: 144
    note: |
          is there a way to make this inline?

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 67
  - file: internal/singly_linked_list.py
    line: 202
    note: |
          is there a way to make this inline?

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 68
  - file: doc/src/15_cdar.yaml
    line: 45
    note: |
          finish dependings

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 69
  - file: internal/pre_commit.py
    line: 37
    note: |
          generate documentation to some better place, maybe /tmp ?
          after committed, change the branch copy the content and
          then commit changed to the gh-pages branch and switch
          back to master branch

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 70
  - file: internal/pre_commit.py
    line: 42
    note: |
          Make error messages and reports of cver/cdoc/ccom/clic similar!

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 71
  - file: doc/src/00_cutils.yaml
    line: 17
    note: |
          consider changing `clic` -> `ccom` and `ccom` -> `ctag`



#----------------------------- 2 POSTS IN 2 FILES -----------------------------#
HACK:
  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 1
  - file: etc/cutils_modern_api.c
    line: 88
    note: |
          the re-casting of the pointers is a dirty but useful hack which is
          needed to set the assignment-expression to a function call instead of
          the function name itself. If re-casting is not added, the code will
          also work, however the compiler will generate 2 warnings.
          more info: http://stackoverflow.com/questions/24743520 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 2
  - file: internal/generator.py
    line: 155
    note: |
          make the supporter types way more generic
          create a better definition-structure!



#----------------------------- 5 POSTS IN 5 FILES -----------------------------#
NOTE:
  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 1
  - file: internal/hash/xxhash.c
    line: 141
    note: |
          although _rotl exists for minGW (GCC under windows), performance seems poor

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 2
  - file: internal/singly_linked_list.c
    line: 1173
    note: |
          maybe rename const void *item --> const void *target ?
          if it will be done, de the same in DynamicArray methods as well 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 3
  - file: csll.c
    line: 1168
    note: |
          maybe rename const void *item --> const void *target ?
          if it will be done, de the same in DynamicArray methods as well 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 4
  - file: doc/src/05_ccom.yaml
    line: 87
    note: |
          length of the char
          array stored in string 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 5
  - file: doc/src/00_cutils.yaml
    line: 19
    note: |
          Timing: 1) CCOL
                  2) update doc -> menu: fork me, etc.



#----------------------------- 3 POSTS IN 3 FILES -----------------------------#
ALERT:
  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 1
  - file: capi.h
    line: 524
    note: |
          D O N ' T   R E M O V E   T H E   N E X T   C O M M E N T !!! 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 2
  - file: internal/dynamic_array.h
    line: 17
    note: |
          DON NOT ADD GUARD TO THIS FILE !!! 

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  # 3
  - file: internal/singly_linked_list.h
    line: 17
    note: |
          DON NOT ADD GUARD TO THIS FILE !!! 


