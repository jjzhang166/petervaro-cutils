## INFO ########################################################################
##                                                                            ##
##                                   cutils                                   ##
##                                   ======                                   ##
##                                                                            ##
##                     Modern and Lightweight C Utilities                     ##
##                       Version: 0.8.90.506 (20140819)                       ##
##                                                                            ##
##                         File: doc/src/13_cpro.yaml                         ##
##                                                                            ##
##           Designed and written by Peter Varo. Copyright (c) 2014           ##
##             License agreement is provided in the LICENSE file              ##
##                 For more info visit: http://www.cutils.org                 ##
##                                                                            ##
######################################################################## INFO ##

#------------------------------------------------------------------------------#
PAGE: CPRO Profiling
NAME: cpro

#------------------------------------------------------------------------------#
HEAD:
  FILE: const/head.yaml

#------------------------------------------------------------------------------#
INFO:
  - - h1
    - string: 'CPRO | Profiling'
  - - br
  - - p
    - string: |
              A very lightweight profiling header-only utility, contains a
              single function-like macro which time-profiles a function.

#------------------------------------------------------------------------------#
USER:
  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  - - Options
    - FILE: const/name.yaml
      VARS:
        VAR_head: cpro
        VAR_func: profile

#------------------------------------------------------------------------------#
FUNC:
  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
  - func: profile
    args:
      - - size_t
        - cycles
      - - double
        - time
      - - type(*
        - function
        - )()
      - - ''
        - ...

    info: |
          `profile` is a function-like macro, which calls the argument
          `function`, for `cycles` number of times and measures the time it
          takes to run, and writes the duration to `time`. If the function takes
          any arguments, it can also be provided after the `function` argument.

    examples:
      - - >
          In the following example `profile` will measure the duration of
          running `myfunction` (takes a single `unsigned long long` integer) for
          hundred million times
        - |
          #include <stdio.h>        /* printf() */
          #include <cutils/cpro.h>  /* profile() */
          #include <cutils/capi.h>
          \\n
          static void
          myfunction(unsigned long long *i)
          {
              unsigned long long x = *i;
              *i = (x*x + x/2 + x/3)/x;
          }
          \\n
          int main(void)
          {
              #define CYCLES 100000000
              double time;
              unsigned long long number = 16;
              \\n
              /* Run myfunction a hundred million times */
              profile(CYCLES, time, myfunction, &number);
              printf("To run 'myfunction' for %d times takes %lfs\n", CYCLES, time);
              \\n
              return 0;
          }

      - - OUTPUT
        - |
          \\OFF
          To run 'myfunction' for 100000000 times takes 4.901353s
